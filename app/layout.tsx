import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import { headers } from 'next/headers'
import { cookieToInitialState } from 'wagmi'
import Provider from "./providers"; 
import { config,getConfig } from "./config";
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { WagmiProvider } from 'wagmi'
 

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// 2. Set up a React Query client.

 function TopNavbar() {
  const queryClient = new QueryClient();  
  return (
    <header className="sticky top-0 z-50 w-full border-b border-[#93a1a1] bg-[#fdf6e3] text-[#073642] shadow-sm">
      <div className="mx-auto flex h-16 items-center justify-between px-6">
        <Link href="/" className="text-xl font-bold tracking-tight hover:opacity-80 transition">
          Decentralized Publishing
        </Link>

        {/* Placeholder for future items (e.g., wallet, nav buttons) */}
        <nav className="flex items-center gap-4 text-sm font-medium">
          <Link href="/" className="hover:underline">
             Articles
          </Link>
          
          <Link href="/publish" className="hover:underline">
            Publish
          </Link>
          <Link href="/support" className="hover:underline">
            Support Writers
          </Link>
        </nav>
      </div>
    </header>
  )
}
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  
   const initialState = cookieToInitialState(
    getConfig(),
    (await headers()).get('cookie')
  )
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-800 text-[#002b36] `}>
     
         <TopNavbar />
        {/*<div className=" prr gradient -z-10"></div> */}

        <main className="p-4">
          <Provider  initialState={initialState}>{children}</Provider>
          </main>
        
      </body>
    </html>
  );
}
